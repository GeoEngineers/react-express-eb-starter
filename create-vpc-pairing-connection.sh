#!/bin/bash

# THIS WAS GENERATED BY CHATGPT AND HAS NOT BEEN TESTED AS OF 4/23/24 - AJZ

# Variables
source_vpc_id="vpc-1"            # Update with your source VPC ID
dest_vpc_id="vpc-2"              # Update with your destination VPC ID
source_account_id="111111111111" # Update with your source AWS account ID
dest_account_id="222222222222"   # Update with your destination AWS account ID
region="us-west-2"               # Update with your desired region
db_security_group="sg-1"         # Update with your destination security group ID
source_security_group="sg-2"     # Update with your source security group ID
source_cidr_block="10.0.0.0/16"  # Update with your source CIDR block
dest_cidr_block="10.1.0.0/16"    # Update with your destination CIDR block

# Step 1: Create a VPC peering connection
peering_connection_id=$(aws ec2 create-vpc-peering-connection \
    --region $region \
    --peer-vpc-id $dest_vpc_id \
    --vpc-id $source_vpc_id \
    --peer-owner-id $dest_account_id \
    --output text --query 'VpcPeeringConnection.VpcPeeringConnectionId')

echo "Created VPC peering connection: $peering_connection_id"

# Step 2: Accept the peering connection in the destination account
aws ec2 accept-vpc-peering-connection \
    --region $region \
    --vpc-peering-connection-id $peering_connection_id \
    --output text

echo "Accepted VPC peering connection: $peering_connection_id"

# Step 3: Update route tables
# Update the route table in the source VPC to point to the destination VPC
source_route_table_id=$(aws ec2 describe-route-tables \
    --region $region \
    --filters Name="vpc-id",Values="$source_vpc_id" \
    --query 'RouteTables[0].RouteTableId' \
    --output text)

aws ec2 create-route \
    --region $region \
    --route-table-id $source_route_table_id \
    --destination-cidr-block $dest_cidr_block \
    --vpc-peering-connection-id $peering_connection_id \
    --output text

echo "Updated route table in the source VPC: $source_route_table_id"

# Update the route table in the destination VPC to point to the source VPC
dest_route_table_id=$(aws ec2 describe-route-tables \
    --region $region \
    --filters Name="vpc-id",Values="$dest_vpc_id" \
    --query 'RouteTables[0].RouteTableId' \
    --output text)

aws ec2 create-route \
    --region $region \
    --route-table-id $dest_route_table_id \
    --destination-cidr-block $source_cidr_block \
    --vpc-peering-connection-id $peering_connection_id \
    --output text

echo "Updated route table in the destination VPC: $dest_route_table_id"

# Step 4: Update security group rules
aws ec2 authorize-security-group-ingress \
    --region $region \
    --group-id $db_security_group \
    --protocol tcp \
    --port 5432 \
    --source-group $source_security_group \
    --output text

echo "Updated security group rules for $db_security_group to allow PostgreSQL traffic from $source_security_group"

echo "VPC peering connection between $source_vpc_id and $dest_vpc_id completed successfully!"
